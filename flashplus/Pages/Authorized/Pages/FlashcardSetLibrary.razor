@page "/flashcardset/library"
@layout AuthorizedLayout

@inject IFlashcardSetDataAccess FlashcardSetDataAccess
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager

@code{
    bool IsInitialized;

    FlashcardSetLibraryService flashcardSetLibraryService;

    protected override async Task OnInitializedAsync()
    {
        flashcardSetLibraryService = new FlashcardSetLibraryService(FlashcardSetDataAccess, localStorage, NavigationManager);
        await flashcardSetLibraryService.AccessInitiliazeLibrary();
        IsInitialized = true;
    }


}

@if (IsInitialized)
{
    <PageTitle>View Flashcard Set</PageTitle>

    <div class="center-horizontal">

        <div class="library-container">

            <div class="title-container">
                <h3>Flashcard Set Library</h3>
            </div>
            @if (flashcardSetLibraryService.totalPageNo != 0)
            {
                <div class="set-row">
                    @foreach (var flashcardset in flashcardSetLibraryService.displayedSets)
                    {
                        <div class="flashcardset" @onclick="(async () => await flashcardSetLibraryService.LoadFlashcardSet(Convert.ToInt32(flashcardset[2])))">
                            <h2>@flashcardset[0] |</h2>
                            <p>@flashcardset[1]</p>
                        </div>
                    }
                </div>

                <div class="center-horizontal">
                    <button class="nextcard-button" @onclick="@flashcardSetLibraryService.PreviousPage">&lt;</button>
                    <p id="card-counter">@flashcardSetLibraryService.currentPageNo / @flashcardSetLibraryService.totalPageNo</p>
                    <button class="nextcard-button" @onclick="@flashcardSetLibraryService.NextPage">&gt;</button>
                </div>
            }
            else
            {
                <p>No flashcard sets found</p>
            }

        </div>

    </div>
}
