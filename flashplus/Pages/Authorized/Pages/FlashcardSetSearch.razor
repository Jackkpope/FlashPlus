@page "/flashcardset/search"
@layout AuthorizedLayout

@inject IFlashcardSetDataAccess FlashcardSetDataAccess
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager

@code{
    bool IsInitialized;
    FlashcardSetSearchService flashcardSetSearchService;

    protected override async Task OnInitializedAsync()
    {
        flashcardSetSearchService = new FlashcardSetSearchService(FlashcardSetDataAccess, localStorage, NavigationManager);
        IsInitialized = true;
    }
}

@if (IsInitialized)
{
    <div class="center-horizontal">

        <EditForm Model="@flashcardSetSearchService.searchModel">

            <div class="searchflashcardset-container">
                <div class="LHS-container">
                    <div class="set-row">
                        <div class="searchbar center-horizontal">
                            <InputTextArea class="textarea" @bind-value="@flashcardSetSearchService.searchModel.Search" ValueExpression="@(() => flashcardSetSearchService.searchModel.Search)" />
                            <button class ="search-button" type="submit" @onclick="@(async () => await flashcardSetSearchService.SubmitSearch())">Search</button>
                        </div>
                    </div>

                    @if (flashcardSetSearchService.search)
                    {
                    <div class="set-row">
                        @foreach (var flashcardset in flashcardSetSearchService.displayedSets)
                        {
                            <div class="flashcardset" @onclick="(async () => await flashcardSetSearchService.LoadFlashcardSet(Convert.ToInt32(flashcardset[2])))">
                                <h2>@flashcardset[0] |</h2>
                                <p>@flashcardset[1]</p>
                            </div>
                        }
                    </div>

                    <div class="center-horizontal">
                        <button @onclick="@flashcardSetSearchService.PreviousPage" class="nextcard-button">&lt;</button>
                        <p id="card-counter">@flashcardSetSearchService.currentPageNo / @flashcardSetSearchService.totalPageNo</p>
                        <button @onclick="@flashcardSetSearchService.NextPage" class="nextcard-button">&gt;</button>
                    </div>
                    }

                    @if (flashcardSetSearchService.errorMessage != null)
                    {
                        <p class="error-message">@flashcardSetSearchService.errorMessage</p>
                    }
                </div>

                <div class="RHS-container">
                    <div class="searchoptions-container">
                        <div class="options-container">
                            <h1>Sort</h1>
                            <InputRadioGroup @bind-Value="@flashcardSetSearchService.searchModel.SortType">
                                <div class="option">
                                    <label for="Alphabetical">A to Z</label><br>
                                    <InputRadio id="Alphabetical" Value="flashcardSetSearchService.searchModel.SortTypes[0]" />
                                </div>
                                <div class="option">
                                    <label for="AlphabeticalInvert">Z to A</label><br>
                                    <InputRadio id="AlphabeticalInvert" Value="flashcardSetSearchService.searchModel.SortTypes[1]"/>
                                </div>
                            </InputRadioGroup>
                        </div>

                        <div class="options-container">
                            <h1>Search</h1>
                            <InputRadioGroup @bind-Value="@flashcardSetSearchService.searchModel.SearchType">
                                <div class="option">
                                    <label for="Title">Title</label><br>
                                    <InputRadio id="Title" Value="flashcardSetSearchService.searchModel.SearchTypes[0]" />
                                </div>
                                <div class="option">
                                    <label for="Subject">Subject</label><br>
                                    <InputRadio id="Subject" Value="flashcardSetSearchService.searchModel.SearchTypes[1]" />
                                </div>
                            </InputRadioGroup>
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
}

@code {

}
