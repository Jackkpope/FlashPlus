@page "/register"
@layout UnauthorizedLayout

@inject IEntryDataAccess EntryDataAccess
@inject ILocalStorageService localStorage
@inject NavigationManager NavigationManager

@code {
    bool IsInitialized { get; set; }
    EntryService entryService;


    protected override async Task OnInitializedAsync()
    {
        entryService = new EntryService(EntryDataAccess, localStorage, NavigationManager);
        IsInitialized = true;
    }
}

@if (IsInitialized)
{
    <div class="form-container center-horizontal center-vertical">
        <div class="form">

            <EditForm Model="@entryService.entryModel" OnSubmit="@entryService.HandleRegister">

                <h1 class="center-horizontal">Register</h1>
                <h2>Username</h2>
                <InputText class="form-input" @bind-Value="@entryService.entryModel.Username" type="text" />

                <h2>Password</h2>
                <InputText class="form-input" @bind-Value="@entryService.entryModel.Password" type="password" />

                <h2>Confirm Password</h2>
                <InputText class="form-input" @bind-Value="@entryService.entryModel.ConfirmPassword" type="password" />

                <button class="form-submit" type="submit">Submit</button>

                <p class="center-horizontal">Already have an account?&nbsp<NavLink href="login">Login</NavLink></p>

                @if (entryService.errorMessage != null)
                {
                    <p2 class="error-message center-horizontal">@entryService.errorMessage</p2>
                }

                <NavLink class="link-button" href="/">back</NavLink>

            </EditForm>

        </div>
    </div>
}


